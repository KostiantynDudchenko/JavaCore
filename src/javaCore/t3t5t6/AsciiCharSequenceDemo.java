package javaCore.t3t5t6;

/*???????? ??????????? ????? AsciiCharSequence, ??????????? ?????????? ????????
 ?????????????????? ASCII-???????? (?? ???? ??????? ? ???? ????) ? ??????? ????.
 ?? ????????? ? ??????? String ?? Java 8, ???????? ?????? ?????? ??? char,
 AsciiCharSequence ????? ???????? ? ??? ???? ?????? ??????

 ????? AsciiCharSequence ??????:

 ????????????? ????????? java.lang.CharSequence;
 ????? ???????????, ??????????? ?????? ????;
 ?????????? ?????? length(), charAt(), subSequence() ? toString()

 ????????? ??????? ? ???????? ?? ?? ????????? ???????? ? ????????
 ?????????? java.lang.CharSequence (JavaDoc ??? ?????????).

 ? ?????? ??????? ??????? charAt() ? subSequence() ?????? ????? ??????????
 ?????????? ??????? ?????????, ??????? ?? ????????? ? ?????????? ??????
 ?????????? ?? ?????. ??? ????? ?? ??? ?? ????????? ??????????.
*/

import java.util.Arrays;

public class AsciiCharSequenceDemo {

    public  static class AsciiCharSequence implements CharSequence{

        private byte[] data;

        public AsciiCharSequence(byte[] data) {
            this.data = data;
        }

        @Override
        public int length() {
            return data.length;
        }

        @Override
        public char charAt(int index) {
            return (char) data[index];
        }

        @Override
        public CharSequence subSequence(int start, int end) {
            return new AsciiCharSequence(Arrays.copyOfRange(data, start, end));
        }

        @Override
        public String toString() {
            return new String(data);
        }
    }

    public static void main(String[] args) {

        byte[] ascii = new byte[] {67, 68, 69, 70, 71, 72, 73};
        AsciiCharSequence asciiCharSequence = new AsciiCharSequence(ascii);

        System.out.println("length - " + asciiCharSequence.length());
        System.out.println("charAt - " + asciiCharSequence.charAt(2));
        System.out.println("subSequence - " + asciiCharSequence.subSequence(1, 3));
        System.out.println("toString - " + asciiCharSequence.toString());
    }
}
